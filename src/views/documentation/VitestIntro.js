export default {
  title: "Vitest简介",
  content: [
    {
      title: "简介",
      value: "intro",
      content: [
        {
          type: "text",
          content: "Vitest 是由 Vite 驱动的下一代测试框架。",
        },
        {
          type: "list",
          content: [
            "与 Vite 通用的配置、转换器、解析器和插件。",
            "使用与你的应用相同的设置来运行测试！",
            "智能文件监听模式，就像是测试的 HMR！",
            "支持对 Vue、React、Svelte、Lit等框架进行组件测试。",
            "开箱即用的 TypeScript / JSX 支持",
            "ESM 优先，支持模块顶级 await",
            "通过 Tinypool 使用 Worker 线程尽可能多地并发运行",
            "使用 Tinybench 来支持基准测试",
            "套件和测试的过滤、超时、并发配置",
            "支持 Workspace",
            "Jest 的快照功能",
            "内置 Chai 进行断言 + 与 Jest expect 语法兼容的 API",
            "内置用于对象模拟(Mock)的 Tinyspy",
            "使用 jsdom 或 happy-dom 用于 DOM 模拟",
            "通过 v8 or istanbul来输出代码测试覆盖率",
            "类似于 Rust 语言的 源码内联测试",
            "通过 expect-type 进行类型测试",
          ],
        },
      ],
    },
    {
      title: "与jest对比",
      value: "compareJest",
      collapse: false,
      children: [
        {
          title: "关注度",
          value: "focus",
          content: [
            {
              type: "text",
              content: "Vitest 是由 Vite 驱动的下一代测试框架。",
            },
            {
              type: "list",
              content: [
                "与 Vite 通用的配置、转换器、解析器和插件。",
                "使用与你的应用相同的设置来运行测试！",
                "智能文件监听模式，就像是测试的 HMR！",
                "支持对 Vue、React、Svelte、Lit等框架进行组件测试。",
                "开箱即用的 TypeScript / JSX 支持",
                "ESM 优先，支持模块顶级 await",
                "通过 Tinypool 使用 Worker 线程尽可能多地并发运行",
                "使用 Tinybench 来支持基准测试",
                "套件和测试的过滤、超时、并发配置",
                "支持 Workspace",
                "Jest 的快照功能",
                "内置 Chai 进行断言 + 与 Jest expect 语法兼容的 API",
                "内置用于对象模拟(Mock)的 Tinyspy",
                "使用 jsdom 或 happy-dom 用于 DOM 模拟",
                "通过 v8 or istanbul来输出代码测试覆盖率",
                "类似于 Rust 语言的 源码内联测试",
                "通过 expect-type 进行类型测试",
              ],
            },
          ],
        },
        {
          title: "速度对比",
          value: "compareSpeed",
          content: [
            {
              type: "text",
              content: "Vitest 是由 Vite 驱动的下一代测试框架。",
            },
            {
              type: "list",
              content: [
                "与 Vite 通用的配置、转换器、解析器和插件。",
                "使用与你的应用相同的设置来运行测试！",
                "智能文件监听模式，就像是测试的 HMR！",
                "支持对 Vue、React、Svelte、Lit等框架进行组件测试。",
                "开箱即用的 TypeScript / JSX 支持",
                "ESM 优先，支持模块顶级 await",
                "通过 Tinypool 使用 Worker 线程尽可能多地并发运行",
                "使用 Tinybench 来支持基准测试",
                "套件和测试的过滤、超时、并发配置",
                "支持 Workspace",
                "Jest 的快照功能",
                "内置 Chai 进行断言 + 与 Jest expect 语法兼容的 API",
                "内置用于对象模拟(Mock)的 Tinyspy",
                "使用 jsdom 或 happy-dom 用于 DOM 模拟",
                "通过 v8 or istanbul来输出代码测试覆盖率",
                "类似于 Rust 语言的 源码内联测试",
                "通过 expect-type 进行类型测试",
              ],
            },
          ],
        },
        {
          title: "优缺点比较",
          value: "compareAdvantage",
          content: [
            {
              type: "text",
              content: "Vitest 是由 Vite 驱动的下一代测试框架。",
            },
            {
              type: "list",
              content: [
                "与 Vite 通用的配置、转换器、解析器和插件。",
                "使用与你的应用相同的设置来运行测试！",
                "智能文件监听模式，就像是测试的 HMR！",
                "支持对 Vue、React、Svelte、Lit等框架进行组件测试。",
                "开箱即用的 TypeScript / JSX 支持",
                "ESM 优先，支持模块顶级 await",
                "通过 Tinypool 使用 Worker 线程尽可能多地并发运行",
                "使用 Tinybench 来支持基准测试",
                "套件和测试的过滤、超时、并发配置",
                "支持 Workspace",
                "Jest 的快照功能",
                "内置 Chai 进行断言 + 与 Jest expect 语法兼容的 API",
                "内置用于对象模拟(Mock)的 Tinyspy",
                "使用 jsdom 或 happy-dom 用于 DOM 模拟",
                "通过 v8 or istanbul来输出代码测试覆盖率",
                "类似于 Rust 语言的 源码内联测试",
                "通过 expect-type 进行类型测试",
              ],
            },
          ],
        },
      ],
    },
  ],
};
